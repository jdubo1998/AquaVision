{"ast":null,"code":"import React from 'react';\nimport { io } from 'socket.io-client';\nvar socket = io('http://192.168.0.24:5000/');\nsocket.on('connect', function () {\n  console.log(\"Connected with id: \" + socket.id);\n});\nsocket.on('relaydata', function (command) {\n  console.log(\"Relaying command: \" + command);\n});\nsocket.on('connect_error', function (err) {\n  console.log(err.message);\n});\nsocket.on(\"disconnect\", function (reason) {\n  console.log(reason);\n\n  if (reason === \"io server disconnect\") {\n    socket.connect();\n  }\n});","map":{"version":3,"sources":["C:/Users/Jacob/Documents/CodingProjects/AquaVision/app/App.js"],"names":["React","io","socket","on","console","log","id","command","err","message","reason","connect"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAT,QAAmB,kBAAnB;AAEA,IAAMC,MAAM,GAAGD,EAAE,CAAC,2BAAD,CAAjB;AAuCAC,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,YAAM;AACvBC,EAAAA,OAAO,CAACC,GAAR,yBAAkCH,MAAM,CAACI,EAAzC;AACH,CAFD;AAKAJ,MAAM,CAACC,EAAP,CAAU,WAAV,EAAuB,UAACI,OAAD,EAAa;AAChCH,EAAAA,OAAO,CAACC,GAAR,wBAAiCE,OAAjC;AACH,CAFD;AAIAL,MAAM,CAACC,EAAP,CAAU,eAAV,EAA2B,UAACK,GAAD,EAAS;AAChCJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,OAAhB;AACH,CAFD;AAIAP,MAAM,CAACC,EAAP,CAAU,YAAV,EAAwB,UAACO,MAAD,EAAY;AAChCN,EAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;;AACA,MAAIA,MAAM,KAAK,sBAAf,EAAuC;AAEnCR,IAAAA,MAAM,CAACS,OAAP;AACH;AAEJ,CAPD","sourcesContent":["import React from 'react'\nimport { io } from 'socket.io-client';  \n\nconst socket = io('http://192.168.0.24:5000/')\n\n/***   START OF TEST CODE (Unrefined code, just a way to get user's inputs for test chat.)  ***/\n\n// var message = {value: ''};\n// var inputComp = {comp: null}\n\n// function handleChange(e) {\n//     message.value = e.target.value;\n//     inputComp.comp = e.target;\n// }\n\n// export default function App() {\n//     console.log(socket)\n\n//     return (\n//         <div>\n//             <input type='text' onChange={(e) => handleChange(e)}/>\n\n//             <button onClick={relayMessage}>\n//                 Send message.\n//             </button>\n//         </div>\n//     )\n// }\n\n// function relayMessage() {\n//     if (socket != null) {\n//         console.log(message.value);\n//         socket.emit('relaymessage', message.value);\n//     }\n\n//     message.value = '';\n//     inputComp.comp.value = '';\n// }\n\n/***   END OF TEST CODE   ***/\n\n/* When the socket connects, it outputs the socket id. */\nsocket.on('connect', () => {\n    console.log(`Connected with id: ${socket.id}`)\n})\n\n/* Event to send commands to the Translate Module. */\nsocket.on('relaydata', (command) => {\n    console.log(`Relaying command: ${command}`)\n})\n\nsocket.on('connect_error', (err) => {\n    console.log(err.message);\n})\n\nsocket.on(\"disconnect\", (reason) => {\n    console.log(reason)\n    if (reason === \"io server disconnect\") {\n        // the disconnection was initiated by the server, you need to reconnect manually\n        socket.connect()\n    }\n    // else the socket will automatically try to reconnect\n})"]},"metadata":{},"sourceType":"module"}