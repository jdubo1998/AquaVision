{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Documents\\\\CodingProjects\\\\AquaVision\\\\app\\\\App.js\";\nimport React from 'react';\nimport { io } from 'socket.io-client';\nvar socket = io('http://192.168.0.24:5000/');\nvar message = {\n  value: ''\n};\nvar inputComp = {\n  comp: null\n};\n\nfunction handleChange(e) {\n  message.value = e.target.value;\n  inputComp.comp = e.target;\n}\n\nexport default function App() {\n  console.log(socket);\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), React.createElement(\"button\", {\n    onClick: relayMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Send message.\"));\n}\n\nfunction relayMessage() {\n  if (socket != null) {\n    console.log(message.value);\n    socket.emit('relaymessage', message.value);\n  }\n\n  message.value = '';\n  inputComp.comp.value = '';\n}\n\nsocket.on('relaymessage', function (message) {\n  alert(\"Received: \" + message);\n});\nsocket.on('connect', function () {\n  console.log(\"Connected with id: \" + socket.id);\n});\nsocket.on('relaycommand', function (command) {\n  console.log(\"Relaying command: \" + command);\n});\nsocket.on('connect_error', function (err) {\n  console.log(err.message);\n});\nsocket.on(\"disconnect\", function (reason) {\n  console.log(reason);\n\n  if (reason === \"io server disconnect\") {\n    socket.connect();\n  }\n});","map":{"version":3,"sources":["C:/Users/Jacob/Documents/CodingProjects/AquaVision/app/App.js"],"names":["React","io","socket","message","value","inputComp","comp","handleChange","e","target","App","console","log","relayMessage","emit","on","alert","id","command","err","reason","connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAT,QAAmB,kBAAnB;AAEA,IAAMC,MAAM,GAAGD,EAAE,CAAC,2BAAD,CAAjB;AAGA,IAAIE,OAAO,GAAG;AAACC,EAAAA,KAAK,EAAE;AAAR,CAAd;AACA,IAAIC,SAAS,GAAG;AAACC,EAAAA,IAAI,EAAE;AAAP,CAAhB;;AAEA,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACrBL,EAAAA,OAAO,CAACC,KAAR,GAAgBI,CAAC,CAACC,MAAF,CAASL,KAAzB;AACAC,EAAAA,SAAS,CAACC,IAAV,GAAiBE,CAAC,CAACC,MAAnB;AACH;;AAED,eAAe,SAASC,GAAT,GAAe;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAE,kBAACM,CAAD;AAAA,aAAOD,YAAY,CAACC,CAAD,CAAnB;AAAA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAQ,IAAA,OAAO,EAAEK,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CADJ;AASH;;AAED,SAASA,YAAT,GAAwB;AACpB,MAAIX,MAAM,IAAI,IAAd,EAAoB;AAChBS,IAAAA,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACC,KAApB;AACAF,IAAAA,MAAM,CAACY,IAAP,CAAY,cAAZ,EAA4BX,OAAO,CAACC,KAApC;AACH;;AAEDD,EAAAA,OAAO,CAACC,KAAR,GAAgB,EAAhB;AACAC,EAAAA,SAAS,CAACC,IAAV,CAAeF,KAAf,GAAuB,EAAvB;AACH;;AAEDF,MAAM,CAACa,EAAP,CAAU,cAAV,EAA0B,UAACZ,OAAD,EAAa;AACnCa,EAAAA,KAAK,gBAAcb,OAAd,CAAL;AACH,CAFD;AAKAD,MAAM,CAACa,EAAP,CAAU,SAAV,EAAqB,YAAM;AACvBJ,EAAAA,OAAO,CAACC,GAAR,yBAAkCV,MAAM,CAACe,EAAzC;AACH,CAFD;AAIAf,MAAM,CAACa,EAAP,CAAU,cAAV,EAA0B,UAACG,OAAD,EAAa;AACnCP,EAAAA,OAAO,CAACC,GAAR,wBAAiCM,OAAjC;AACH,CAFD;AAIAhB,MAAM,CAACa,EAAP,CAAU,eAAV,EAA2B,UAACI,GAAD,EAAS;AAChCR,EAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAAChB,OAAhB;AACH,CAFD;AAIAD,MAAM,CAACa,EAAP,CAAU,YAAV,EAAwB,UAACK,MAAD,EAAY;AAChCT,EAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;;AACA,MAAIA,MAAM,KAAK,sBAAf,EAAuC;AAEnClB,IAAAA,MAAM,CAACmB,OAAP;AACH;AAEJ,CAPD","sourcesContent":["import React from 'react'\nimport { io } from 'socket.io-client';  \n\nconst socket = io('http://192.168.0.24:5000/')\n\n// START OF TEST CODE (This is very unrefined code, something to simply take the user's inputs)\nvar message = {value: ''};\nvar inputComp = {comp: null}\n\nfunction handleChange(e) {\n    message.value = e.target.value;\n    inputComp.comp = e.target;\n}\n\nexport default function App() {\n    console.log(socket)\n\n    return (\n        <div>\n            <input type='text' onChange={(e) => handleChange(e)}/>\n\n            <button onClick={relayMessage}>\n                Send message.\n            </button>\n        </div>\n    )\n}\n\nfunction relayMessage() {\n    if (socket != null) {\n        console.log(message.value);\n        socket.emit('relaymessage', message.value);\n    }\n\n    message.value = '';\n    inputComp.comp.value = '';\n}\n\nsocket.on('relaymessage', (message) => {\n    alert(`Received: ${message}`)\n})\n// END OF TEST CODE\n\nsocket.on('connect', () => {\n    console.log(`Connected with id: ${socket.id}`)\n})\n\nsocket.on('relaycommand', (command) => {\n    console.log(`Relaying command: ${command}`)\n})\n\nsocket.on('connect_error', (err) => {\n    console.log(err.message);\n})\n\nsocket.on(\"disconnect\", (reason) => {\n    console.log(reason)\n    if (reason === \"io server disconnect\") {\n        // the disconnection was initiated by the server, you need to reconnect manually\n        socket.connect()\n    }\n    // else the socket will automatically try to reconnect\n})"]},"metadata":{},"sourceType":"module"}