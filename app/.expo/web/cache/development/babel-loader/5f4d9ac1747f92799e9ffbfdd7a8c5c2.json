{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Documents\\\\CodingProjects\\\\AquaVision\\\\app\\\\App.js\";\nimport React from 'react';\nimport { io } from 'socket.io-client';\nvar socket = io('http://192.168.0.24:5000/');\nvar message = {\n  value: ''\n};\nvar inputComp = {\n  comp: null\n};\nexport default function App() {\n  console.log(socket);\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(\"button\", {\n    onClick: testSocketConnection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Test socket connection.\"), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), React.createElement(\"button\", {\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Send message.\"));\n}\nsocket.on('connect', function () {\n  console.log(\"Connected with id: \" + socket.id);\n});\nsocket.on('relaycommand', function (command) {\n  console.log(\"Relaying command: \" + command);\n});\nsocket.on('connect_error', function (err) {\n  console.log(err.message);\n});\nsocket.on(\"disconnect\", function (reason) {\n  console.log(reason);\n\n  if (reason === \"io server disconnect\") {\n    socket.connect();\n  }\n});","map":{"version":3,"sources":["C:/Users/Jacob/Documents/CodingProjects/AquaVision/app/App.js"],"names":["React","io","socket","message","value","inputComp","comp","App","console","log","testSocketConnection","e","handleChange","sendMessage","on","id","command","err","reason","connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAT,QAAmB,kBAAnB;AAEA,IAAMC,MAAM,GAAGD,EAAE,CAAC,2BAAD,CAAjB;AAEA,IAAIE,OAAO,GAAG;AAACC,EAAAA,KAAK,EAAE;AAAR,CAAd;AACA,IAAIC,SAAS,GAAG;AAACC,EAAAA,IAAI,EAAE;AAAP,CAAhB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAEQ,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAKI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOC,YAAY,CAACD,CAAD,CAAnB;AAAA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAOI;AAAQ,IAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPJ,CADJ;AAaH;AAEDX,MAAM,CAACY,EAAP,CAAU,SAAV,EAAqB,YAAM;AACvBN,EAAAA,OAAO,CAACC,GAAR,yBAAkCP,MAAM,CAACa,EAAzC;AACH,CAFD;AAIAb,MAAM,CAACY,EAAP,CAAU,cAAV,EAA0B,UAACE,OAAD,EAAa;AACnCR,EAAAA,OAAO,CAACC,GAAR,wBAAiCO,OAAjC;AACH,CAFD;AAIAd,MAAM,CAACY,EAAP,CAAU,eAAV,EAA2B,UAACG,GAAD,EAAS;AAChCT,EAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAG,CAACd,OAAhB;AACH,CAFD;AAIAD,MAAM,CAACY,EAAP,CAAU,YAAV,EAAwB,UAACI,MAAD,EAAY;AAChCV,EAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;;AACA,MAAIA,MAAM,KAAK,sBAAf,EAAuC;AAEnChB,IAAAA,MAAM,CAACiB,OAAP;AACH;AAEJ,CAPD","sourcesContent":["import React from 'react'\nimport { io } from 'socket.io-client';  \n\nconst socket = io('http://192.168.0.24:5000/')\n\nvar message = {value: ''};\nvar inputComp = {comp: null}\n\nexport default function App() {\n    console.log(socket)\n\n    return (\n        <div>\n            <button onClick={testSocketConnection}>\n                Test socket connection.\n            </button>\n\n            <input type='text' onChange={(e) => handleChange(e)}/>\n\n            <button onClick={sendMessage}>\n                Send message.\n            </button>\n        </div>\n    )\n}\n\nsocket.on('connect', () => {\n    console.log(`Connected with id: ${socket.id}`)\n})\n\nsocket.on('relaycommand', (command) => {\n    console.log(`Relaying command: ${command}`)\n})\n\nsocket.on('connect_error', (err) => {\n    console.log(err.message);\n})\n\nsocket.on(\"disconnect\", (reason) => {\n    console.log(reason)\n    if (reason === \"io server disconnect\") {\n        // the disconnection was initiated by the server, you need to reconnect manually\n        socket.connect()\n    }\n    // else the socket will automatically try to reconnect\n})"]},"metadata":{},"sourceType":"module"}